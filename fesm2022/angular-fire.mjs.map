{"version":3,"file":"angular-fire.mjs","sources":["../../../src/core.ts","../../../src/pendingtasks.ts","../../../src/zones.ts","../../../src/angular-fire.ts"],"sourcesContent":["import { Version } from '@angular/core';\nimport { ComponentContainer } from '@firebase/component';\nimport { FirebaseApp, getApps } from 'firebase/app';\n\nexport const VERSION = new Version('ANGULARFIRE2_VERSION');\n\nexport const ɵisSupportedError = (module: string) =>\n  `The APP_INITIALIZER that is \"making\" isSupported() sync for the sake of convenient DI has not resolved in this\ncontext. Rather than injecting ${module} in the constructor, first ensure that ${module} is supported by calling\n\\`await isSupported()\\`, then retrieve the instance from the injector manually \\`injector.get(${module})\\`.`;\n\n// TODO is there a better way to get at the internal types?\ninterface FirebaseAppWithContainer extends FirebaseApp {\n  container: ComponentContainer;\n}\n\nexport function ɵgetDefaultInstanceOf<T= unknown>(identifier: string, provided: T[]|undefined, defaultApp: FirebaseApp): T|undefined  {\n  if (provided) {\n    // Was provide* only called once? If so grab that\n    if (provided.length === 1) { return provided[0]; }\n    const providedUsingDefaultApp = provided.filter((it: any) => it.app === defaultApp);\n    // Was provide* only called once, using the default app? If so use that\n    if (providedUsingDefaultApp.length === 1) { return providedUsingDefaultApp[0]; }\n  }\n  // Grab the default instance from the defaultApp\n  const defaultAppWithContainer: FirebaseAppWithContainer = defaultApp as any;\n  const provider = defaultAppWithContainer.container.getProvider(identifier as never);\n  return provider.getImmediate({ optional: true });\n}\n\nexport const ɵgetAllInstancesOf = <T= unknown>(identifier: string, app?: FirebaseApp): T[] => {\n  const apps = app ? [app] : getApps();\n  const instances: any[] = [];\n  apps.forEach((app: FirebaseAppWithContainer) => {\n    const provider: any = app.container.getProvider(identifier as never);\n    provider.instances.forEach((instance: any) => {\n      if (!instances.includes(instance)) {\n        instances.push(instance);\n      }\n    });\n  });\n  return instances;\n};\n","\nimport { ExperimentalPendingTasks, Injector, assertInInjectionContext, inject } from \"@angular/core\";\nimport { MonoTypeOperatorFunction, Observable } from \"rxjs\";\n\n// MARK: Angular 18 Compat w/ Pending Tasks\n\n/*\n  NOTE: This is a temporary implementation of pending tasks for Angular 18.\n\n  It seems like these are mainly necessary for SSR which is not supported in dbx-components, so it shouldn't matter.\n*/\n\n/**\n * Theoretically equivalent to PendingTasks.run() in Angular 19...\n * \n * @param pendingTasks \n * @param fn \n * @returns \n */\nexport function runPendingTask(pendingTasks: ExperimentalPendingTasks, fn: () => Promise<unknown>): Promise<unknown> {\n  const removeTask = pendingTasks.add();\n  return fn().finally(removeTask);\n}\n\n/**\n * Theoretically equivalent to PendingTasks.pendingUntilEvent() in Angular 19...\n \n * Operator which makes the application unstable until the observable emits, completes, errors, or is unsubscribed.\n *\n * Use this operator in observables whose subscriptions are important for rendering and should be included in SSR serialization.\n *\n * @param injector The `Injector` to use during creation. If this is not provided, the current injection context will be used instead (via `inject`).\n *\n * @experimental\n */\nexport function pendingUntilEvent<T>(injector?: Injector): MonoTypeOperatorFunction<T> {\n  if (injector === undefined) {\n    assertInInjectionContext(pendingUntilEvent);\n    injector = inject(Injector);\n  }\n  const taskService = injector.get(ExperimentalPendingTasks);\n\n  return (sourceObservable) => {\n    return new Observable<T>((originalSubscriber) => {\n      // create a new task on subscription\n      const removeTask = taskService.add();\n\n      let cleanedUp = false;\n      function cleanupTask() {\n        if (cleanedUp) {\n          return;\n        }\n\n        removeTask();\n        cleanedUp = true;\n      }\n\n      const innerSubscription = sourceObservable.subscribe({\n        next: (v) => {\n          originalSubscriber.next(v);\n          cleanupTask();\n        },\n        complete: () => {\n          originalSubscriber.complete();\n          cleanupTask();\n        },\n        error: (e) => {\n          originalSubscriber.error(e);\n          cleanupTask();\n        },\n      });\n      innerSubscription.add(() => {\n        originalSubscriber.unsubscribe();\n        cleanupTask();\n      });\n      return innerSubscription;\n    });\n  };\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport {\n  EnvironmentInjector,\n  ExperimentalPendingTasks,\n  Injectable,\n  Injector,\n  NgZone,\n  assertInInjectionContext,\n  inject,\n  isDevMode,\n  runInInjectionContext\n} from '@angular/core';\nimport {\n  MonoTypeOperatorFunction,\n  Observable,\n  SchedulerAction,\n  SchedulerLike,\n  Subscription,\n  asyncScheduler,\n  queueScheduler\n} from 'rxjs';\nimport { observeOn, subscribeOn } from 'rxjs/operators';\nimport { pendingUntilEvent, runPendingTask } from './pendingtasks';\n\ndeclare const Zone: { current: unknown } | undefined;\n\nexport enum LogLevel {\n  \"SILENT\" = 0,\n  \"WARN\" = 1,\n  \"VERBOSE\" = 2,\n}\n\n\nvar currentLogLevel = (isDevMode() && typeof Zone !== \"undefined\") ? LogLevel.WARN : LogLevel.SILENT;\n\nexport const setLogLevel = (logLevel: LogLevel) => currentLogLevel = logLevel;\n\n/**\n * Schedules tasks so that they are invoked inside the Zone that is passed in the constructor.\n */\nexport class ɵZoneScheduler implements SchedulerLike {\n  constructor(private zone: any, private delegate: any = queueScheduler) {\n  }\n\n  now() {\n    return this.delegate.now();\n  }\n\n  schedule(work: (this: SchedulerAction<any>, state?: any) => void, delay?: number, state?: any): Subscription {\n    const targetZone = this.zone;\n    // Wrap the specified work function to make sure that if nested scheduling takes place the\n    // work is executed in the correct zone\n    const workInZone = function (this: SchedulerAction<any>, state: any) {\n      if (targetZone) {\n        targetZone.runGuarded(() => {\n          work.apply(this, [state]);\n        });\n      } else {\n        work.apply(this, [state]);\n      }\n    };\n\n    // Scheduling itself needs to be run in zone to ensure setInterval calls for async scheduling are done\n    // inside the correct zone. This scheduler needs to schedule asynchronously always to ensure that\n    // firebase emissions are never synchronous. Specifying a delay causes issues with the queueScheduler delegate.\n    return this.delegate.schedule(workInZone, delay, state);\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ɵAngularFireSchedulers {\n  public readonly outsideAngular: ɵZoneScheduler;\n  public readonly insideAngular: ɵZoneScheduler;\n\n  constructor() {\n    const ngZone = inject(NgZone);\n    this.outsideAngular = ngZone.runOutsideAngular(\n      () => new ɵZoneScheduler(typeof Zone === 'undefined' ? undefined : Zone.current)\n    );\n    this.insideAngular = ngZone.run(\n      () => new ɵZoneScheduler(\n        typeof Zone === 'undefined' ? undefined : Zone.current,\n        asyncScheduler\n      )\n    );\n  }\n}\n\nvar alreadyWarned = false;\nfunction warnOutsideInjectionContext(original: any, logLevel: LogLevel) {\n  if (!alreadyWarned && (currentLogLevel > LogLevel.SILENT || isDevMode())) {\n    alreadyWarned = true;\n    console.warn(\"Calling Firebase APIs outside of an Injection context may destabilize your application leading to subtle change-detection and hydration bugs. Find more at https://github.com/angular/angularfire/blob/main/docs/zones.md\");\n  }\n  if (currentLogLevel >= logLevel) {\n    console.warn(`Firebase API called outside injection context: ${original.name}`);\n  }\n}\n\nfunction runOutsideAngular<T>(fn: (...args: any[]) => T): T {\n  const ngZone = inject(NgZone, { optional: true });\n  if (!ngZone) { return fn(); }\n  return ngZone.runOutsideAngular(() => fn());\n}\n\nfunction run<T>(fn: (...args: any[]) => T): T {\n  const ngZone = inject(NgZone, { optional: true });\n  if (!ngZone) { return fn(); }\n  return ngZone.run(() => fn());\n}\n\nconst zoneWrapFn = (\n  it: (...args: any[]) => any,\n  taskDone: VoidFunction | undefined,\n  injector: EnvironmentInjector,\n) => {\n  return (...args: any[]) => {\n    if (taskDone) {\n      setTimeout(taskDone, 0);\n    }\n    return runInInjectionContext(injector, () => run(() => it.apply(this, args)));\n  };\n};\n\nexport const ɵzoneWrap = <T = unknown>(it: T, blockUntilFirst: boolean, logLevel?: LogLevel): T => {\n  logLevel ||= blockUntilFirst ? LogLevel.WARN : LogLevel.VERBOSE;\n  // function() is needed for the arguments object\n  return function () {\n    let taskDone: VoidFunction | undefined;\n    const _arguments = arguments;\n    let schedulers: ɵAngularFireSchedulers;\n    let pendingTasks: ExperimentalPendingTasks;\n    let injector: EnvironmentInjector;\n\n    try {\n      schedulers = inject(ɵAngularFireSchedulers);\n      pendingTasks = inject(ExperimentalPendingTasks);\n      injector = inject(EnvironmentInjector);\n    } catch (e) {\n      warnOutsideInjectionContext(it, logLevel);\n      return (it as any).apply(this, _arguments);\n    }\n    // if this is a callback function, e.g, onSnapshot, we should create a pending task and complete it\n    // only once one of the callback functions is tripped.\n    for (let i = 0; i < arguments.length; i++) {\n      if (typeof _arguments[i] === 'function') {\n        if (blockUntilFirst) {\n          taskDone ||= run(() => pendingTasks.add());\n        }\n        // TODO create a microtask to track callback functions\n        _arguments[i] = zoneWrapFn(_arguments[i], taskDone, injector);\n      }\n    }\n    const ret = runOutsideAngular(() => (it as any).apply(this, _arguments));\n    if (!blockUntilFirst) {\n      if (ret instanceof Observable) {\n        return ret.pipe(\n          subscribeOn(schedulers.outsideAngular),\n          observeOn(schedulers.insideAngular),\n        );\n      } else {\n        return run(() => ret);\n      }\n    }\n    if (ret instanceof Observable) {\n      return ret.pipe(\n        subscribeOn(schedulers.outsideAngular),\n        observeOn(schedulers.insideAngular),\n        pendingUntilEvent(injector),\n      );\n    } else if (ret instanceof Promise) {\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      return run(\n        () =>\n          new Promise((resolve, reject) => {\n            runPendingTask(pendingTasks, () => ret).then(\n              (it) => runInInjectionContext(injector, () => run(() => resolve(it))),\n              (reason) => runInInjectionContext(injector, () => run(() => reject(reason)))\n            );\n          }));\n    } else if (typeof ret === 'function' && taskDone) {\n      // Handle unsubscribe\n      // function() is needed for the arguments object\n      return function () {\n        setTimeout(taskDone, 0);\n        return ret.apply(this, arguments);\n      };\n    } else {\n      // TODO how do we handle storage uploads in Zone? and other stuff with cancel() etc?\n      return run(() => ret);\n    }\n  } as any;\n};\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["this"],"mappings":";;;;;;MAIa,OAAO,GAAG,IAAI,OAAO,CAAC,sBAAsB,EAAE;MAE9C,iBAAiB,GAAG,CAAC,MAAc,KAC9C,CAAA;AAC+B,+BAAA,EAAA,MAAM,0CAA0C,MAAM,CAAA;AACS,8FAAA,EAAA,MAAM,OAAO;SAO7F,qBAAqB,CAAa,UAAkB,EAAE,QAAuB,EAAE,UAAuB,EAAA;IACpH,IAAI,QAAQ,EAAE;;AAEZ,QAAA,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;AAAE,YAAA,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC;SAAE;AAClD,QAAA,MAAM,uBAAuB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAO,KAAK,EAAE,CAAC,GAAG,KAAK,UAAU,CAAC,CAAC;;AAEpF,QAAA,IAAI,uBAAuB,CAAC,MAAM,KAAK,CAAC,EAAE;AAAE,YAAA,OAAO,uBAAuB,CAAC,CAAC,CAAC,CAAC;SAAE;KACjF;;IAED,MAAM,uBAAuB,GAA6B,UAAiB,CAAC;IAC5E,MAAM,QAAQ,GAAG,uBAAuB,CAAC,SAAS,CAAC,WAAW,CAAC,UAAmB,CAAC,CAAC;IACpF,OAAO,QAAQ,CAAC,YAAY,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACnD,CAAC;MAEY,kBAAkB,GAAG,CAAa,UAAkB,EAAE,GAAiB,KAAS;AAC3F,IAAA,MAAM,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,EAAE,CAAC;IACrC,MAAM,SAAS,GAAU,EAAE,CAAC;AAC5B,IAAA,IAAI,CAAC,OAAO,CAAC,CAAC,GAA6B,KAAI;QAC7C,MAAM,QAAQ,GAAQ,GAAG,CAAC,SAAS,CAAC,WAAW,CAAC,UAAmB,CAAC,CAAC;QACrE,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAa,KAAI;YAC3C,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AACjC,gBAAA,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC1B;AACH,SAAC,CAAC,CAAC;AACL,KAAC,CAAC,CAAC;AACH,IAAA,OAAO,SAAS,CAAC;AACnB;;ACtCA;AAEA;;;;AAIE;AAEF;;;;;;AAMG;AACa,SAAA,cAAc,CAAC,YAAsC,EAAE,EAA0B,EAAA;AAC/F,IAAA,MAAM,UAAU,GAAG,YAAY,CAAC,GAAG,EAAE,CAAC;AACtC,IAAA,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,CAAC;AAED;;;;;;;;;;AAUG;AACG,SAAU,iBAAiB,CAAI,QAAmB,EAAA;AACtD,IAAA,IAAI,QAAQ,KAAK,SAAS,EAAE;QAC1B,wBAAwB,CAAC,iBAAiB,CAAC,CAAC;AAC5C,QAAA,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;KAC7B;IACD,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IAE3D,OAAO,CAAC,gBAAgB,KAAI;AAC1B,QAAA,OAAO,IAAI,UAAU,CAAI,CAAC,kBAAkB,KAAI;;AAE9C,YAAA,MAAM,UAAU,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;YAErC,IAAI,SAAS,GAAG,KAAK,CAAC;AACtB,YAAA,SAAS,WAAW,GAAA;gBAClB,IAAI,SAAS,EAAE;oBACb,OAAO;iBACR;AAED,gBAAA,UAAU,EAAE,CAAC;gBACb,SAAS,GAAG,IAAI,CAAC;aAClB;AAED,YAAA,MAAM,iBAAiB,GAAG,gBAAgB,CAAC,SAAS,CAAC;AACnD,gBAAA,IAAI,EAAE,CAAC,CAAC,KAAI;AACV,oBAAA,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC3B,oBAAA,WAAW,EAAE,CAAC;iBACf;gBACD,QAAQ,EAAE,MAAK;oBACb,kBAAkB,CAAC,QAAQ,EAAE,CAAC;AAC9B,oBAAA,WAAW,EAAE,CAAC;iBACf;AACD,gBAAA,KAAK,EAAE,CAAC,CAAC,KAAI;AACX,oBAAA,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC5B,oBAAA,WAAW,EAAE,CAAC;iBACf;AACF,aAAA,CAAC,CAAC;AACH,YAAA,iBAAiB,CAAC,GAAG,CAAC,MAAK;gBACzB,kBAAkB,CAAC,WAAW,EAAE,CAAC;AACjC,gBAAA,WAAW,EAAE,CAAC;AAChB,aAAC,CAAC,CAAC;AACH,YAAA,OAAO,iBAAiB,CAAC;AAC3B,SAAC,CAAC,CAAC;AACL,KAAC,CAAC;AACJ;;AC9EA;IA0BY,SAIX;AAJD,CAAA,UAAY,QAAQ,EAAA;AAClB,IAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAY,CAAA;AACZ,IAAA,QAAA,CAAA,QAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAU,CAAA;AACV,IAAA,QAAA,CAAA,QAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAa,CAAA;AACf,CAAC,EAJW,QAAQ,KAAR,QAAQ,GAInB,EAAA,CAAA,CAAA,CAAA;AAGD,IAAI,eAAe,GAAG,CAAC,SAAS,EAAE,IAAI,OAAO,IAAI,KAAK,WAAW,IAAI,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC;AAE9F,MAAM,WAAW,GAAG,CAAC,QAAkB,KAAK,eAAe,GAAG,SAAS;AAE9E;;AAEG;MACU,cAAc,CAAA;AACL,IAAA,IAAA,CAAA;AAAmB,IAAA,QAAA,CAAA;IAAvC,WAAoB,CAAA,IAAS,EAAU,QAAA,GAAgB,cAAc,EAAA;QAAjD,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAK;QAAU,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAsB;KACpE;IAED,GAAG,GAAA;AACD,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;KAC5B;AAED,IAAA,QAAQ,CAAC,IAAuD,EAAE,KAAc,EAAE,KAAW,EAAA;AAC3F,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;;;QAG7B,MAAM,UAAU,GAAG,UAAsC,KAAU,EAAA;YACjE,IAAI,UAAU,EAAE;AACd,gBAAA,UAAU,CAAC,UAAU,CAAC,MAAK;oBACzB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5B,iBAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;aAC3B;AACH,SAAC,CAAC;;;;AAKF,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;KACzD;AACF,CAAA;MAKY,sBAAsB,CAAA;AACjB,IAAA,cAAc,CAAiB;AAC/B,IAAA,aAAa,CAAiB;AAE9C,IAAA,WAAA,GAAA;AACE,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AAC9B,QAAA,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,iBAAiB,CAC5C,MAAM,IAAI,cAAc,CAAC,OAAO,IAAI,KAAK,WAAW,GAAG,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,CACjF,CAAC;AACF,QAAA,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,GAAG,CAC7B,MAAM,IAAI,cAAc,CACtB,OAAO,IAAI,KAAK,WAAW,GAAG,SAAS,GAAG,IAAI,CAAC,OAAO,EACtD,cAAc,CACf,CACF,CAAC;KACH;wGAfU,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAtB,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,cAFrB,MAAM,EAAA,CAAA,CAAA;;4FAEP,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAHlC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;AAmBD,IAAI,aAAa,GAAG,KAAK,CAAC;AAC1B,SAAS,2BAA2B,CAAC,QAAa,EAAE,QAAkB,EAAA;AACpE,IAAA,IAAI,CAAC,aAAa,KAAK,eAAe,GAAG,QAAQ,CAAC,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE;QACxE,aAAa,GAAG,IAAI,CAAC;AACrB,QAAA,OAAO,CAAC,IAAI,CAAC,2NAA2N,CAAC,CAAC;KAC3O;AACD,IAAA,IAAI,eAAe,IAAI,QAAQ,EAAE;QAC/B,OAAO,CAAC,IAAI,CAAC,CAAA,+CAAA,EAAkD,QAAQ,CAAC,IAAI,CAAE,CAAA,CAAC,CAAC;KACjF;AACH,CAAC;AAED,SAAS,iBAAiB,CAAI,EAAyB,EAAA;AACrD,IAAA,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;IAClD,IAAI,CAAC,MAAM,EAAE;QAAE,OAAO,EAAE,EAAE,CAAC;KAAE;IAC7B,OAAO,MAAM,CAAC,iBAAiB,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AAC9C,CAAC;AAED,SAAS,GAAG,CAAI,EAAyB,EAAA;AACvC,IAAA,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;IAClD,IAAI,CAAC,MAAM,EAAE;QAAE,OAAO,EAAE,EAAE,CAAC;KAAE;IAC7B,OAAO,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AAChC,CAAC;AAED,MAAM,UAAU,GAAG,CACjB,EAA2B,EAC3B,QAAkC,EAClC,QAA6B,KAC3B;AACF,IAAA,OAAO,CAAC,GAAG,IAAW,KAAI;QACxB,IAAI,QAAQ,EAAE;AACZ,YAAA,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;SACzB;QACD,OAAO,qBAAqB,CAAC,QAAQ,EAAE,MAAM,GAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAACA,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAChF,KAAC,CAAC;AACJ,CAAC,CAAC;AAEW,MAAA,SAAS,GAAG,CAAc,EAAK,EAAE,eAAwB,EAAE,QAAmB,KAAO;AAChG,IAAA,QAAQ,KAAK,eAAe,GAAG,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC;;IAEhE,OAAO,YAAA;AACL,QAAA,IAAI,QAAkC,CAAC;QACvC,MAAM,UAAU,GAAG,SAAS,CAAC;AAC7B,QAAA,IAAI,UAAkC,CAAC;AACvC,QAAA,IAAI,YAAsC,CAAC;AAC3C,QAAA,IAAI,QAA6B,CAAC;AAElC,QAAA,IAAI;AACF,YAAA,UAAU,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC;AAC5C,YAAA,YAAY,GAAG,MAAM,CAAC,wBAAwB,CAAC,CAAC;AAChD,YAAA,QAAQ,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC;SACxC;QAAC,OAAO,CAAC,EAAE;AACV,YAAA,2BAA2B,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;YAC1C,OAAQ,EAAU,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;SAC5C;;;AAGD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,OAAO,UAAU,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE;gBACvC,IAAI,eAAe,EAAE;oBACnB,QAAQ,KAAK,GAAG,CAAC,MAAM,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC;iBAC5C;;AAED,gBAAA,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;aAC/D;SACF;AACD,QAAA,MAAM,GAAG,GAAG,iBAAiB,CAAC,MAAO,EAAU,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,eAAe,EAAE;AACpB,YAAA,IAAI,GAAG,YAAY,UAAU,EAAE;AAC7B,gBAAA,OAAO,GAAG,CAAC,IAAI,CACb,WAAW,CAAC,UAAU,CAAC,cAAc,CAAC,EACtC,SAAS,CAAC,UAAU,CAAC,aAAa,CAAC,CACpC,CAAC;aACH;iBAAM;AACL,gBAAA,OAAO,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;aACvB;SACF;AACD,QAAA,IAAI,GAAG,YAAY,UAAU,EAAE;YAC7B,OAAO,GAAG,CAAC,IAAI,CACb,WAAW,CAAC,UAAU,CAAC,cAAc,CAAC,EACtC,SAAS,CAAC,UAAU,CAAC,aAAa,CAAC,EACnC,iBAAiB,CAAC,QAAQ,CAAC,CAC5B,CAAC;SACH;AAAM,aAAA,IAAI,GAAG,YAAY,OAAO,EAAE;;AAEjC,YAAA,OAAO,GAAG,CACR,MACE,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;gBAC9B,cAAc,CAAC,YAAY,EAAE,MAAM,GAAG,CAAC,CAAC,IAAI,CAC1C,CAAC,EAAE,KAAK,qBAAqB,CAAC,QAAQ,EAAE,MAAM,GAAG,CAAC,MAAM,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,EACrE,CAAC,MAAM,KAAK,qBAAqB,CAAC,QAAQ,EAAE,MAAM,GAAG,CAAC,MAAM,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAC7E,CAAC;aACH,CAAC,CAAC,CAAC;SACT;AAAM,aAAA,IAAI,OAAO,GAAG,KAAK,UAAU,IAAI,QAAQ,EAAE;;;YAGhD,OAAO,YAAA;AACL,gBAAA,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBACxB,OAAO,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACpC,aAAC,CAAC;SACH;aAAM;;AAEL,YAAA,OAAO,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;SACvB;AACH,KAAQ,CAAC;AACX;;AClMA;;AAEG;;;;"}