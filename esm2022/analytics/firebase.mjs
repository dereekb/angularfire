// DO NOT MODIFY, this file is autogenerated by tools/build.ts
export * from 'firebase/analytics';
import { ɵzoneWrap } from '@angular/fire';
import { getAnalytics as _getAnalytics, getGoogleAnalyticsClientId as _getGoogleAnalyticsClientId, initializeAnalytics as _initializeAnalytics, isSupported as _isSupported, logEvent as _logEvent, setAnalyticsCollectionEnabled as _setAnalyticsCollectionEnabled, setConsent as _setConsent, setCurrentScreen as _setCurrentScreen, setDefaultEventParameters as _setDefaultEventParameters, setUserId as _setUserId, setUserProperties as _setUserProperties, settings as _settings } from 'firebase/analytics';
export const getAnalytics = ɵzoneWrap(_getAnalytics, true);
export const getGoogleAnalyticsClientId = ɵzoneWrap(_getGoogleAnalyticsClientId, true);
export const initializeAnalytics = ɵzoneWrap(_initializeAnalytics, true);
export const isSupported = ɵzoneWrap(_isSupported, false);
export const logEvent = ɵzoneWrap(_logEvent, false, 2);
export const setAnalyticsCollectionEnabled = ɵzoneWrap(_setAnalyticsCollectionEnabled, true, 2);
export const setConsent = ɵzoneWrap(_setConsent, true, 2);
export const setCurrentScreen = ɵzoneWrap(_setCurrentScreen, true, 2);
export const setDefaultEventParameters = ɵzoneWrap(_setDefaultEventParameters, true, 2);
export const setUserId = ɵzoneWrap(_setUserId, true, 2);
export const setUserProperties = ɵzoneWrap(_setUserProperties, true, 2);
export const settings = ɵzoneWrap(_settings, true);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZWJhc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvYW5hbHl0aWNzL2ZpcmViYXNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhEQUE4RDtBQUM5RCxjQUFjLG9CQUFvQixDQUFDO0FBQ25DLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUNMLFlBQVksSUFBSSxhQUFhLEVBQzdCLDBCQUEwQixJQUFJLDJCQUEyQixFQUN6RCxtQkFBbUIsSUFBSSxvQkFBb0IsRUFDM0MsV0FBVyxJQUFJLFlBQVksRUFDM0IsUUFBUSxJQUFJLFNBQVMsRUFDckIsNkJBQTZCLElBQUksOEJBQThCLEVBQy9ELFVBQVUsSUFBSSxXQUFXLEVBQ3pCLGdCQUFnQixJQUFJLGlCQUFpQixFQUNyQyx5QkFBeUIsSUFBSSwwQkFBMEIsRUFDdkQsU0FBUyxJQUFJLFVBQVUsRUFDdkIsaUJBQWlCLElBQUksa0JBQWtCLEVBQ3ZDLFFBQVEsSUFBSSxTQUFTLEVBQ3RCLE1BQU0sb0JBQW9CLENBQUM7QUFFNUIsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLFNBQVMsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDM0QsTUFBTSxDQUFDLE1BQU0sMEJBQTBCLEdBQUcsU0FBUyxDQUFDLDJCQUEyQixFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3ZGLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUN6RSxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsU0FBUyxDQUFDLFlBQVksRUFBRSxLQUFLLENBQUMsQ0FBQztBQUMxRCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsU0FBUyxDQUFDLFNBQVMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDdkQsTUFBTSxDQUFDLE1BQU0sNkJBQTZCLEdBQUcsU0FBUyxDQUFDLDhCQUE4QixFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztBQUNoRyxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsU0FBUyxDQUFDLFdBQVcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDMUQsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsU0FBUyxDQUFDLGlCQUFpQixFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztBQUN0RSxNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBRyxTQUFTLENBQUMsMEJBQTBCLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ3hGLE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxTQUFTLENBQUMsVUFBVSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztBQUN4RCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxTQUFTLENBQUMsa0JBQWtCLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ3hFLE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxTQUFTLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRE8gTk9UIE1PRElGWSwgdGhpcyBmaWxlIGlzIGF1dG9nZW5lcmF0ZWQgYnkgdG9vbHMvYnVpbGQudHNcbmV4cG9ydCAqIGZyb20gJ2ZpcmViYXNlL2FuYWx5dGljcyc7XG5pbXBvcnQgeyDJtXpvbmVXcmFwIH0gZnJvbSAnQGFuZ3VsYXIvZmlyZSc7XG5pbXBvcnQge1xuICBnZXRBbmFseXRpY3MgYXMgX2dldEFuYWx5dGljcyxcbiAgZ2V0R29vZ2xlQW5hbHl0aWNzQ2xpZW50SWQgYXMgX2dldEdvb2dsZUFuYWx5dGljc0NsaWVudElkLFxuICBpbml0aWFsaXplQW5hbHl0aWNzIGFzIF9pbml0aWFsaXplQW5hbHl0aWNzLFxuICBpc1N1cHBvcnRlZCBhcyBfaXNTdXBwb3J0ZWQsXG4gIGxvZ0V2ZW50IGFzIF9sb2dFdmVudCxcbiAgc2V0QW5hbHl0aWNzQ29sbGVjdGlvbkVuYWJsZWQgYXMgX3NldEFuYWx5dGljc0NvbGxlY3Rpb25FbmFibGVkLFxuICBzZXRDb25zZW50IGFzIF9zZXRDb25zZW50LFxuICBzZXRDdXJyZW50U2NyZWVuIGFzIF9zZXRDdXJyZW50U2NyZWVuLFxuICBzZXREZWZhdWx0RXZlbnRQYXJhbWV0ZXJzIGFzIF9zZXREZWZhdWx0RXZlbnRQYXJhbWV0ZXJzLFxuICBzZXRVc2VySWQgYXMgX3NldFVzZXJJZCxcbiAgc2V0VXNlclByb3BlcnRpZXMgYXMgX3NldFVzZXJQcm9wZXJ0aWVzLFxuICBzZXR0aW5ncyBhcyBfc2V0dGluZ3Ncbn0gZnJvbSAnZmlyZWJhc2UvYW5hbHl0aWNzJztcblxuZXhwb3J0IGNvbnN0IGdldEFuYWx5dGljcyA9IMm1em9uZVdyYXAoX2dldEFuYWx5dGljcywgdHJ1ZSk7XG5leHBvcnQgY29uc3QgZ2V0R29vZ2xlQW5hbHl0aWNzQ2xpZW50SWQgPSDJtXpvbmVXcmFwKF9nZXRHb29nbGVBbmFseXRpY3NDbGllbnRJZCwgdHJ1ZSk7XG5leHBvcnQgY29uc3QgaW5pdGlhbGl6ZUFuYWx5dGljcyA9IMm1em9uZVdyYXAoX2luaXRpYWxpemVBbmFseXRpY3MsIHRydWUpO1xuZXhwb3J0IGNvbnN0IGlzU3VwcG9ydGVkID0gybV6b25lV3JhcChfaXNTdXBwb3J0ZWQsIGZhbHNlKTtcbmV4cG9ydCBjb25zdCBsb2dFdmVudCA9IMm1em9uZVdyYXAoX2xvZ0V2ZW50LCBmYWxzZSwgMik7XG5leHBvcnQgY29uc3Qgc2V0QW5hbHl0aWNzQ29sbGVjdGlvbkVuYWJsZWQgPSDJtXpvbmVXcmFwKF9zZXRBbmFseXRpY3NDb2xsZWN0aW9uRW5hYmxlZCwgdHJ1ZSwgMik7XG5leHBvcnQgY29uc3Qgc2V0Q29uc2VudCA9IMm1em9uZVdyYXAoX3NldENvbnNlbnQsIHRydWUsIDIpO1xuZXhwb3J0IGNvbnN0IHNldEN1cnJlbnRTY3JlZW4gPSDJtXpvbmVXcmFwKF9zZXRDdXJyZW50U2NyZWVuLCB0cnVlLCAyKTtcbmV4cG9ydCBjb25zdCBzZXREZWZhdWx0RXZlbnRQYXJhbWV0ZXJzID0gybV6b25lV3JhcChfc2V0RGVmYXVsdEV2ZW50UGFyYW1ldGVycywgdHJ1ZSwgMik7XG5leHBvcnQgY29uc3Qgc2V0VXNlcklkID0gybV6b25lV3JhcChfc2V0VXNlcklkLCB0cnVlLCAyKTtcbmV4cG9ydCBjb25zdCBzZXRVc2VyUHJvcGVydGllcyA9IMm1em9uZVdyYXAoX3NldFVzZXJQcm9wZXJ0aWVzLCB0cnVlLCAyKTtcbmV4cG9ydCBjb25zdCBzZXR0aW5ncyA9IMm1em9uZVdyYXAoX3NldHRpbmdzLCB0cnVlKTtcbiJdfQ==