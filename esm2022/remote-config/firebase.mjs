// DO NOT MODIFY, this file is autogenerated by tools/build.ts
export * from 'firebase/remote-config';
import { ɵzoneWrap } from '@angular/fire';
import { activate as _activate, ensureInitialized as _ensureInitialized, fetchAndActivate as _fetchAndActivate, fetchConfig as _fetchConfig, getAll as _getAll, getBoolean as _getBoolean, getNumber as _getNumber, getRemoteConfig as _getRemoteConfig, getString as _getString, getValue as _getValue, isSupported as _isSupported, setCustomSignals as _setCustomSignals, setLogLevel as _setLogLevel } from 'firebase/remote-config';
export const activate = ɵzoneWrap(_activate, true);
export const ensureInitialized = ɵzoneWrap(_ensureInitialized, true);
export const fetchAndActivate = ɵzoneWrap(_fetchAndActivate, true);
export const fetchConfig = ɵzoneWrap(_fetchConfig, true);
export const getAll = ɵzoneWrap(_getAll, true);
export const getBoolean = ɵzoneWrap(_getBoolean, true);
export const getNumber = ɵzoneWrap(_getNumber, true);
export const getRemoteConfig = ɵzoneWrap(_getRemoteConfig, true);
export const getString = ɵzoneWrap(_getString, true);
export const getValue = ɵzoneWrap(_getValue, true);
export const isSupported = ɵzoneWrap(_isSupported, true);
export const setCustomSignals = ɵzoneWrap(_setCustomSignals, true);
export const setLogLevel = ɵzoneWrap(_setLogLevel, true);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZWJhc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcmVtb3RlLWNvbmZpZy9maXJlYmFzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4REFBOEQ7QUFDOUQsY0FBYyx3QkFBd0IsQ0FBQztBQUN2QyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFDTCxRQUFRLElBQUksU0FBUyxFQUNyQixpQkFBaUIsSUFBSSxrQkFBa0IsRUFDdkMsZ0JBQWdCLElBQUksaUJBQWlCLEVBQ3JDLFdBQVcsSUFBSSxZQUFZLEVBQzNCLE1BQU0sSUFBSSxPQUFPLEVBQ2pCLFVBQVUsSUFBSSxXQUFXLEVBQ3pCLFNBQVMsSUFBSSxVQUFVLEVBQ3ZCLGVBQWUsSUFBSSxnQkFBZ0IsRUFDbkMsU0FBUyxJQUFJLFVBQVUsRUFDdkIsUUFBUSxJQUFJLFNBQVMsRUFDckIsV0FBVyxJQUFJLFlBQVksRUFDM0IsZ0JBQWdCLElBQUksaUJBQWlCLEVBQ3JDLFdBQVcsSUFBSSxZQUFZLEVBQzVCLE1BQU0sd0JBQXdCLENBQUM7QUFFaEMsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLFNBQVMsQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDbkQsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsU0FBUyxDQUFDLGtCQUFrQixFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3JFLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLFNBQVMsQ0FBQyxpQkFBaUIsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNuRSxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsU0FBUyxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsQ0FBQztBQUN6RCxNQUFNLENBQUMsTUFBTSxNQUFNLEdBQUcsU0FBUyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQztBQUMvQyxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsU0FBUyxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUN2RCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsU0FBUyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNyRCxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsU0FBUyxDQUFDLGdCQUFnQixFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2pFLE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxTQUFTLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3JELE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxTQUFTLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ25ELE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxTQUFTLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3pELE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLFNBQVMsQ0FBQyxpQkFBaUIsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNuRSxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsU0FBUyxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIERPIE5PVCBNT0RJRlksIHRoaXMgZmlsZSBpcyBhdXRvZ2VuZXJhdGVkIGJ5IHRvb2xzL2J1aWxkLnRzXG5leHBvcnQgKiBmcm9tICdmaXJlYmFzZS9yZW1vdGUtY29uZmlnJztcbmltcG9ydCB7IMm1em9uZVdyYXAgfSBmcm9tICdAYW5ndWxhci9maXJlJztcbmltcG9ydCB7XG4gIGFjdGl2YXRlIGFzIF9hY3RpdmF0ZSxcbiAgZW5zdXJlSW5pdGlhbGl6ZWQgYXMgX2Vuc3VyZUluaXRpYWxpemVkLFxuICBmZXRjaEFuZEFjdGl2YXRlIGFzIF9mZXRjaEFuZEFjdGl2YXRlLFxuICBmZXRjaENvbmZpZyBhcyBfZmV0Y2hDb25maWcsXG4gIGdldEFsbCBhcyBfZ2V0QWxsLFxuICBnZXRCb29sZWFuIGFzIF9nZXRCb29sZWFuLFxuICBnZXROdW1iZXIgYXMgX2dldE51bWJlcixcbiAgZ2V0UmVtb3RlQ29uZmlnIGFzIF9nZXRSZW1vdGVDb25maWcsXG4gIGdldFN0cmluZyBhcyBfZ2V0U3RyaW5nLFxuICBnZXRWYWx1ZSBhcyBfZ2V0VmFsdWUsXG4gIGlzU3VwcG9ydGVkIGFzIF9pc1N1cHBvcnRlZCxcbiAgc2V0Q3VzdG9tU2lnbmFscyBhcyBfc2V0Q3VzdG9tU2lnbmFscyxcbiAgc2V0TG9nTGV2ZWwgYXMgX3NldExvZ0xldmVsXG59IGZyb20gJ2ZpcmViYXNlL3JlbW90ZS1jb25maWcnO1xuXG5leHBvcnQgY29uc3QgYWN0aXZhdGUgPSDJtXpvbmVXcmFwKF9hY3RpdmF0ZSwgdHJ1ZSk7XG5leHBvcnQgY29uc3QgZW5zdXJlSW5pdGlhbGl6ZWQgPSDJtXpvbmVXcmFwKF9lbnN1cmVJbml0aWFsaXplZCwgdHJ1ZSk7XG5leHBvcnQgY29uc3QgZmV0Y2hBbmRBY3RpdmF0ZSA9IMm1em9uZVdyYXAoX2ZldGNoQW5kQWN0aXZhdGUsIHRydWUpO1xuZXhwb3J0IGNvbnN0IGZldGNoQ29uZmlnID0gybV6b25lV3JhcChfZmV0Y2hDb25maWcsIHRydWUpO1xuZXhwb3J0IGNvbnN0IGdldEFsbCA9IMm1em9uZVdyYXAoX2dldEFsbCwgdHJ1ZSk7XG5leHBvcnQgY29uc3QgZ2V0Qm9vbGVhbiA9IMm1em9uZVdyYXAoX2dldEJvb2xlYW4sIHRydWUpO1xuZXhwb3J0IGNvbnN0IGdldE51bWJlciA9IMm1em9uZVdyYXAoX2dldE51bWJlciwgdHJ1ZSk7XG5leHBvcnQgY29uc3QgZ2V0UmVtb3RlQ29uZmlnID0gybV6b25lV3JhcChfZ2V0UmVtb3RlQ29uZmlnLCB0cnVlKTtcbmV4cG9ydCBjb25zdCBnZXRTdHJpbmcgPSDJtXpvbmVXcmFwKF9nZXRTdHJpbmcsIHRydWUpO1xuZXhwb3J0IGNvbnN0IGdldFZhbHVlID0gybV6b25lV3JhcChfZ2V0VmFsdWUsIHRydWUpO1xuZXhwb3J0IGNvbnN0IGlzU3VwcG9ydGVkID0gybV6b25lV3JhcChfaXNTdXBwb3J0ZWQsIHRydWUpO1xuZXhwb3J0IGNvbnN0IHNldEN1c3RvbVNpZ25hbHMgPSDJtXpvbmVXcmFwKF9zZXRDdXN0b21TaWduYWxzLCB0cnVlKTtcbmV4cG9ydCBjb25zdCBzZXRMb2dMZXZlbCA9IMm1em9uZVdyYXAoX3NldExvZ0xldmVsLCB0cnVlKTtcbiJdfQ==